SELECT *FROM DBO.DF_ORDERS;

-- find top 10 highest revenue generating products
SELECT TOP 10 product_id, SUM(SALE_PRICE) AS TOTAL_SALES FROM DF_ORDERS
GROUP BY product_id
ORDER BY TOTAL_SALES DESC;


-- find top 5 highest selling products in each region
SELECT REGION, PRODUCT_ID, TOTAL_SALES FROM 
(
SELECT REGION,  product_id,  SUM(sale_price) AS TOTAL_SALES, ROW_NUMBER() OVER(PARTITION BY REGION ORDER BY SUM(sale_price) DESC) AS RN FROM df_orders
GROUP BY product_id, region, sub_category
) a where a.rn <= 5;


-- find month over month growth comparison for 2022 and 2023 sales eg: jan 2022 vs jan 2023
WITH CTE AS (
SELECT SUM(SALE_PRICE) TOTAL_SALES, YEAR(order_date) AS ORDER_YEAR, MONTH(order_date) AS ORDER_MONTH FROM df_orders
GROUP BY YEAR(order_date), MONTH(order_date)
)
SELECT ORDER_MONTH,
SUM(CASE WHEN ORDER_YEAR = 2022 THEN TOTAL_SALES ELSE 0 END) AS SALES_2022,
SUM(CASE WHEN ORDER_YEAR = 2023 THEN TOTAL_SALES ELSE 0 END) AS SALES_2023
FROM CTE
GROUP BY ORDER_MONTH
ORDER BY ORDER_MONTH;


-- for each category which month had highest sales
WITH CTE AS
(
SELECT category, FORMAT(order_date,'yyyyMM') AS ORDER_MONTH ,SUM(sale_price) AS TOTAL_SALES, RANK() OVER(PARTITION BY CATEGORY ORDER BY SUM(SALE_PRICE) DESC) AS RNK
FROM df_orders
GROUP BY category, FORMAT(order_date,'yyyyMM')
)
 SELECT CATEGORY, ORDER_MONTH, TOTAL_SALES FROM CTE
 WHERE RNK = 1;


 -- which sub category has highest growth by profit in 2023 compare to 2022


WITH CTE AS (
SELECT SUB_CATEGORY, SUM(SALE_PRICE) TOTAL_SALES, YEAR(order_date) AS ORDER_YEAR FROM df_orders
GROUP BY SUB_CATEGORY, YEAR(order_date)
),
CTE2 AS 
(
SELECT SUB_CATEGORY,
SUM(CASE WHEN ORDER_YEAR = 2022 THEN TOTAL_SALES ELSE 0 END) AS SALES_2022,
SUM(CASE WHEN ORDER_YEAR = 2023 THEN TOTAL_SALES ELSE 0 END) AS SALES_2023
FROM CTE
GROUP BY sub_category
)

SELECT TOP 1*,
(SALES_2023-SALES_2022)*100/(SALES_2022) AS GROWTH_PERCENTAGE
FROM CTE2
ORDER BY GROWTH_PERCENTAGE desc